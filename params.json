{"name":"Fractal Architecture Manifesto","body":"This is very much a work in progress.\r\n\r\n# Abstract\r\n\r\nA fractal architecture is an application architecture based on intercommunicating, loosely-coupled, repeating and self-contained units.\r\n\r\n# Maxims\r\n\r\n1. Decentralized over centralized\r\n2. Local over global\r\n3. Verbs over nouns\r\n\r\n# Tenets\r\n\r\n## State\r\n\r\nState is a necessary evil. It gets progressively worse as its scope increases, doubly so if it is mutable. However, pretending it simply doesn't exist is impractical.\r\n\r\nA fractal architecture embraces, contains and limits state.\r\n\r\n## Communication\r\n\r\nSince a fractal architecture-based application is effectively a number of bubbles of state communicating with each other, remote procedure calls end up making a lot more sense than representational state transfer.\r\n\r\nThis is in essence very similar to the actor model of concurrency. Actors are typically smaller than the shards in a fractal architecture: the things being promoted to first class citizens are closer to E's vats than E's objects.\r\n\r\n# Benefits\r\n\r\n## Data locality\r\n\r\nIt's hard to compete with the performance, particularly the latency, of a small, local SQLite database.\r\n\r\n## Cost\r\n\r\n## Scalability\r\n\r\nFew things scale down better than local SQLite databases.\r\n\r\n# Downsides\r\n\r\n## Complexities of a distributed system\r\n\r\n## Unfamiliarity and lack of tooling\r\n\r\nBecause this is not the de facto standard, there is significantly less existing work to fall back on.\r\n\r\nMost people are afraid of the unfamiliar.\r\n\r\n# Tools\r\n\r\nA myriad of tools can be used to accomplish these tasks, but some are more naturally suited to it than others. For example:\r\n\r\n* SQLite is a fantastic data store for use cases where you have a large number of small and mobile databases. It's highly performant to boot.\r\n* Event-loop based systems tend to be better suited to the high level of inter-node communication. The author has had personal successes with Twisted, which comes with an implementation nice full-duplex RPC mechanism called AMP, and a distributed computing/remote objects system called Perspective Broker.\r\n\r\n# Further reading\r\n\r\nThe author has given [a presentation at PyCon ZA](https://www.youtube.com/watch?v=w75TAXYZnNs) on this subject.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"An alternative to classic multi-layered application architectures"}